definitions:
  dto.ForgetPasswordDTO:
    properties:
      email:
        maxLength: 100
        type: string
    required:
    - email
    type: object
  dto.LoginDTO:
    properties:
      email:
        maxLength: 100
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      avatar:
        type: string
      display_name:
        type: string
      email:
        type: string
      expired_time:
        type: string
      id:
        type: integer
      role:
        $ref: '#/definitions/model.RoleType'
      token:
        type: string
      username:
        type: string
    type: object
  dto.ResetPasswordDTO:
    properties:
      confirmPassword:
        minLength: 8
        type: string
      otp:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - confirmPassword
    - otp
    - password
    type: object
  model.RoleType:
    enum:
    - super_admin
    - admin
    - streamer
    - user
    type: string
    x-enum-varnames:
    - SUPPERADMINROLE
    - ADMINROLE
    - STREAMER
    - USERROLE
info:
  contact: {}
paths:
  /api/auth/forgetPassword:
    post:
      consumes:
      - application/json
      description: Generates an OTP for password reset
      parameters:
      - description: Forget Password DTO
        in: body
        name: forgetPasswordDTO
        required: true
        schema:
          $ref: '#/definitions/dto.ForgetPasswordDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OTP generated successfully
        "400":
          description: Email not found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Forget Password
      tags:
      - Auth
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates the user and returns a JWT token
      parameters:
      - description: User Login Data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Invalid request
      summary: Login a user
      tags:
      - Auth
  /api/auth/resetPassword:
    post:
      consumes:
      - application/json
      description: Resets the user's password using OTP
      parameters:
      - description: Reset Password DTO
        in: body
        name: resetPasswordDTO
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successfully
        "400":
          description: Bad Request
        "404":
          description: Email not found
        "500":
          description: Internal Server Error
      summary: Reset Password
      tags:
      - Auth
swagger: "2.0"
